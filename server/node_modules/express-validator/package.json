{
  "name": "express-validator",
  "description": "Express middleware for the validator module.",
  "author": {
    "name": "Christoph Tavan",
    "email": "dev@tavan.de"
  },
  "contributors": [
    {
      "name": "Chris O'Hara",
      "email": "cohara87@gmail.com"
    }
  ],
  "version": "0.1.3",
  "homepage": "https://github.com/ctavan/express-validator",
  "repository": {
    "type": "git",
    "url": "git://github.com/ctavan/express-validator.git"
  },
  "main": "./index.js",
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "validator": ">=0.2.8"
  },
  "devDependencies": {},
  "keywords": [
    "express",
    "validator",
    "validation",
    "validate",
    "sanitize",
    "sanitization",
    "xss"
  ],
  "readme": "# express-validator\n\nAn [express.js]( https://github.com/visionmedia/express ) middleware for\n[node-validator]( https://github.com/chriso/node-validator ).\n\nThis is basically a copy of a [gist]( https://gist.github.com/752126 ) by\nnode-validator author [chriso]( https://github.com/chriso ).\n\n## Installation\n\n```\nnpm install express-validator\n```\n\n## Usage\n\n```javascript\nvar express = require('express'),\n    expressValidator = require('express-validator'),\n    app = express.createServer();\n\napp.use(express.bodyParser());\napp.use(expressValidator);\n\napp.post('/:urlparam', function(req, res) {\n  var errors = [];\n  req.onValidationError(function(msg) {\n    console.log('Validation error: ' + msg);\n    errors.push(msg);\n    return this;\n  });\n\n  req.assert('postparam', 'Invalid postparam').notEmpty().isInt();\n  req.assert('getparam', 'Invalid getparam').isInt();\n  req.assert('urlparam', 'Invalid urlparam').isAlpha();\n\n  req.sanitize('postparam').toBoolean();\n\n  if (errors.length) {\n    res.send('There have been validation errors: ' + errors.join(', '), 500);\n    return;\n  }\n  res.json({\n    urlparam: req.param('urlparam'),\n    getparam: req.param('getparam'),\n    postparam: req.param('postparam')\n  });\n});\n\napp.listen(8888);\n```\n\nWhich will result in:\n\n```\n$ curl -d 'postparam=1' http://localhost:8888/test?getparam=1\n{\"urlparam\":\"test\",\"getparam\":\"1\",\"postparam\":true}\n\n$ curl -d 'postparam=1' http://localhost:8888/t1est?getparam=1\nThere have been validation errors: Invalid urlparam\n\n$ curl -d 'postparam=1' http://localhost:8888/t1est?getparam=1ab\nThere have been validation errors: Invalid getparam, Invalid foo\n```\n\nYou can extend the `Validator` and `Filter` objects to add custom validation\nand sanitization methods:\n\n```javascript\nvar expressValidator = require('express-validator');\n\nexpressValidator.Filter.prototype.toLowerCase = function(){\n  this.modify(this.str.toLowerCase());\n  return this.str;\n};\n```\n\n\n## Changelog\n\n### v0.1.3\n- Readme update\n\n### v0.1.2\n- Expose Filter and Validator instances to allow adding custom methods\n\n### v0.1.1\n- Use req.param() method to get parameter values instead of accessing\n  req.params directly.\n- Remove req.mixinParams() method.\n\n### v0.1.0\n- Initial release\n\n## Contributors\n\n- Christoph Tavan <dev@tavan.de> - Wrap the gist in an npm package\n\n## License\n\nCopyright (c) 2010 Chris O'Hara <cohara87@gmail.com>, MIT License\n\n",
  "_id": "express-validator@0.1.3",
  "_from": "express-validator@0.1.x"
}
